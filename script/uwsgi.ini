# uwsig使用配置文件启动
[uwsgi]
# 项目目录
chdir = /Users/greendan/PycharmProjects/myTravel
# 指定项目的application
module = myTravel.wsgi:application

# 指定sock的文件路径
socket = /Users/greendan/PycharmProjects/myTravel/script/uwsgi.sock
# 进程个数
workers = 5
pidfile = /Users/greendan/PycharmProjects/myTravel/script/uwsgi.pid
# 指定IP端口
http =127.0.0.1:8000
# 指定静态文件
;static-map = /static=/Users/greendan/PycharmProjects/myTravel/static
;# 启动uwsgi的用户名和用户组
;# 启用主进程
;master = true
;# 自动移除unix Socket和pid文件当服务停止的时候
;vacuum = true
;# 序列化接受的内容，如果可能的话
;thunder-lock = true
;# 启用线程
;enable-threads = true
;# 设置自中断时间
;harakiri = 30
;# 设置缓冲
;post-buffering = 4096
;# 设置日志目录
;daemonize = /Users/greendan/PycharmProjectsmProjects/myTravel/script/uwsgi.log
;
;processes = 4
;; myweb_uwsgi.ini file
;;;[uwsgi]
;;
;;# Django-related settings
;;
;;;socket = :8080
;;;
;;;# the base directory (full path)
;;;chdir           = /Users/greendan/PycharmProjects/myTravel
;;;
;;;# Django s wsgi file
;;;module = myTravel.wsgi:travel
;;;
;;;# process-related settings
;;;# master
;;;master          = true
;;;
;;;# maximum number of worker processes
;;;processes       = 4
;;;
;;;# ... with appropriate permissions - may be needed
;;;# chmod-socket    = 664
;;;# clear environment on exit
;;;vacuum          = true
;[uwsgi]
;socket = 127.0.0.1:3031
;chdir = /Users/greendan/PycharmProjects/myTravel
;wsgi-file = myTravel/wsgi.py
;processes = 4
;threads = 2
;stats = 127.0.0.1:9191
